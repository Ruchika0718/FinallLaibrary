@model IEnumerable<FinallLaibrary.Models.tblBook>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br />
<head>
    <title>
        Books List
    </title>
</head>
<h4>Book list</h4>x
<hr />
<br />
<br />

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css" />
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<div class="card mb-4 mt-4">
    <div class="card-header">
        <i class="fas fa-table me-1"></i>
        <span class="fs-5">Book List</span>

        <a href="../Book/Create" class="btn btn-outline-success float-end"> <i class="fa fa-plus"></i>Add New</a>
    </div>
    <div class="card-body table-responsive">
        <table width="100%" class="table-sm table-hover table-bordered" id="example">
            <thead class="bg-success text-light">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.BookTitle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookCategory)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookAuthor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookCopies)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookPub)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookPubName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BookISBN)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Copyright)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateAdded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>
                        BookTitle
                    </th>
                    <th>
                        category
                    </th>
                    <th>
                        Author
                    </th>
                    <th>
                        Copies
                    </th>
                    <th>
                        Publisher
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        No.
                    </th>
                    <th>
                        Copyright
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<br />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
@section scripts{
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/dataTables.bootstrap4.min.js"></script>
    <script>
    $(document).ready(function () {
        $('#example').DataTable({
            "ajax": {
                "url": "/Book/GetAll",
                "type": "get",
                "datatype": "json",
            },
            "columns": [
                { "data": "BookTitle" },
                { "data": "BookCategory" },
                { "data": "BookAuthor" },
                { "data": "BookCopies" },
                { "data": "BookPub" },
                { "data": "BookPubName" },
                { "data": "BookISBN" },
                { "data": "Copyright" },
                {
                    "data": "DateAdded",
                    "render": function (data) {
                        var date = new Date(parseInt(data.substr(6)));
                        return date.toLocaleDateString();
                    }
                },
                { "data": "Status" },
                {
                    "data": "BookId", "render": function (idhere) {
                        return "<a class='btn btn-sm btn-outline-primary text-blue' data-toggle='tooltip' title='Edit' href='@Url.Action("Edit", "Book")/" + idhere + "'> <i class='fas fa-edit'></i> </a> " +
                               "<a class='btn btn-sm btn-outline-success text-success' data-toggle='tooltip' title=' Details' href='@Url.Action("Details", "Book")/" + idhere + "'> <i class='fas fa-info-circle'></i> </a> " +
                               "<a class='btn btn-sm btn-outline-danger text-danger' data-toggle='tooltip' title='Delete ' onclick='Delete(" + idhere + ")'> <i class='fas fa-trash'></i> </a>";
                    },
                    "orderable": false,
                    "width": "245px"
                }
            ],
            "language": {
                "emptyTable": "No data found, Add new items"
            }
        });

        $('[data-toggle="tooltip"]').tooltip();
    });
    </script>

}

@if (Session["bookAddMsg"] != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@Session["bookAddMsg"]");
                window.location.href = "/Book/BookAddMsg";
            };
    </script>
}

<script>
    function Delete(bookId) {
        Swal.fire({
            title: 'Are you sure you want to delete?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '/Book/Delete/' + bookId,
                    dataType: 'json',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(function () {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('AJAX error: ', textStatus, errorThrown);  // Log the error to the console
                        Swal.fire({
                            title: 'Error!',
                            text: 'Some error occurred: ' + textStatus + ' ' + errorThrown,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            }
        });
    }
</script>
